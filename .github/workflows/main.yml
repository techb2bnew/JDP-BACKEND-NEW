name: Deploy Backend Application

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: 

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deployment Started
        run: |
          echo "üöÄ Backend deployment started at $(date)"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.15.1'
          cache: 'npm'

      - name: Install dependencies
        run: |
          echo "üì¶ Installing backend dependencies..."
          # Backend dependencies install karo
          npm ci --ignore-scripts
          echo "‚úÖ Backend dependencies installed successfully"
        env:
          NPM_CONFIG_IGNORE_SCRIPTS: true

      - name: Build application (if needed)
        run: |
          echo "üî® Checking for build requirements..."
          # Fastify backend usually doesn't need build step, but check karo
          if [ -f "package.json" ] && grep -q '"build"' package.json; then
            echo "üì¶ Build script found, running build..."
            npm run build
            echo "‚úÖ Build completed successfully"
          else
            echo "‚è≠Ô∏è No build script found, skipping build step"
          fi
        env:
          NODE_ENV: production

      - name: Prepare deployment files
        run: |
          echo "üßπ Cleaning up files for deployment..."
          # Clean up unnecessary files before deployment
          rm -rf .git node_modules/.cache
          echo "‚úÖ Backend deployment files ready"

      - name: Fix remote permissions
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY_LIVE }}
          script: |
            echo "üîê Fixing remote permissions..."
            # Backend directory ke liye correct path use karo
            sudo chown -R ${{ secrets.SERVER_USER }}:${{ secrets.SERVER_USER }} /home/ec2-user/JDP-BACKEND/
            sudo chmod -R 755 /home/ec2-user/JDP-BACKEND/
            echo "‚úÖ Permissions fixed successfully"

      - name: Deploy via Rsync 
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY_LIVE }}
          REMOTE_HOST: ${{ secrets.SERVER_IP }}
          REMOTE_USER: ${{ secrets.SERVER_USER }}
          TARGET: /home/ec2-user/JDP-BACKEND/
          ARGS: "-rlgoDzvc --chmod=Du=rwx,Dg=rx,Do=rx,Fu=rw,Fg=r,Fo=r --no-perms --no-owner --no-group --exclude=node_modules --exclude=.git --exclude=.next --exclude=dist"
          BEFORE_RSYNC: echo "üöÄ Starting file deployment to server..."
          AFTER_RSYNC: echo "‚úÖ Files deployed successfully to server!"

      - name: Install server dependencies
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY_LIVE }}
          script: |
            echo "üì¶ Installing server dependencies..."
            cd /home/ec2-user/JDP-BACKEND/
            # Server par dependencies install karo
            npm ci --production --ignore-scripts
            echo "‚úÖ Server dependencies installed successfully"

      - name: Restart backend application
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY_LIVE }}
          script: |
            echo "üîÑ Restarting backend application..."
            cd /home/ec2-user/JDP-BACKEND/
            # PM2 se backend restart karo
            pm2 reload jdp-backend || pm2 start "npm run start" --name jdp-backend
            pm2 save
            echo "‚úÖ Backend application restarted successfully"

      - name: Health check
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY_LIVE }}
          script: |
            echo "üè• Performing health check..."
            # Backend health check karo
            sleep 5
            pm2 status jdp-backend
            echo "üéâ Backend deployment completed successfully!"
            echo "üìä Deployment Summary:"
            echo "  - Repository: ${{ github.repository }}"
            echo "  - Branch: ${{ github.ref_name }}"
            echo "  - Commit: ${{ github.sha }}"
            echo "  - Deployed at: $(date)"
