name: Deploy Backend Application

on:
  push:
    branches: [ "main" ]
    paths:
      - 'backend/**'
      - 'JDP-BACKEND/**'
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.15.1'
          cache: 'npm'

      - name: Install dependencies (bypass postinstall)
        run: |
          # Environment variable use karke postinstall script disable karo
          npm ci --ignore-scripts
          npm install --save-dev @types/node
          echo "Dependencies installed without postinstall scripts"
        env:
          NPM_CONFIG_IGNORE_SCRIPTS: true

      - name: Build backend application
        run: |
          # Backend build process
          npm run build || echo "No build script found, skipping build"
          echo "Backend build completed"
        env:
          NODE_ENV: production
          NODE_OPTIONS: --max_old_space_size=4096

      - name: Prepare deployment files
        run: |
          # Clean up unnecessary files before deployment
          rm -rf .git node_modules/.cache
          echo "Backend deployment files ready"

      - name: Fix remote permissions
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY_LIVE }}
          script: |
            # Correct path use karo for backend
            sudo chown -R ${{ secrets.SERVER_USER }}:${{ secrets.SERVER_USER }} /home/ec2-user/JDP-BACKEND/
            sudo chmod -R 755 /home/ec2-user/JDP-BACKEND/

      - name: Deploy backend via Rsync
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY_LIVE }}
          REMOTE_HOST: ${{ secrets.SERVER_IP }}
          REMOTE_USER: ${{ secrets.SERVER_USER }}
          TARGET: /home/ec2-user/JDP-BACKEND/
          ARGS: "-rlgoDzvc --chmod=Du=rwx,Dg=rx,Do=rx,Fu=rw,Fg=r,Fo=r --no-perms --no-owner --no-group --exclude=node_modules --exclude=.git"

      - name: Install production dependencies on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY_LIVE }}
          script: |
            cd /home/ec2-user/JDP-BACKEND/
            # NPM config set karke postinstall script disable karo
            npm config set ignore-scripts true
            # Sirf production dependencies install karo (without postinstall)
            npm ci --only=production --ignore-scripts
            npm config set ignore-scripts false

      - name: Skip environment setup (already in code)
        run: |
          echo "Environment variables already configured in code"
          echo "Skipping environment setup step"

      - name: Restart backend application
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY_LIVE }}
          script: |
            cd /home/ec2-user/JDP-BACKEND/
            # PM2 se restart karo
            pm2 reload jdp-backend || pm2 start "npm run start" --name jdp-backend
            pm2 save
